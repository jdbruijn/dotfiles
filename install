#!/bin/sh
#
# Install the dotfiles, software and configurations.

DOTFILES="${HOME}/.config/dotfiles"

is_macos() {
  [ "$(uname -s)" = "Darwin" ];
}

assert_zsh_shell() {
  if [ "$(basename "${SHELL}")" != "zsh" ]; then
    echo "ERROR: these dotfiles require the Zsh shell and your shell is ${SHELL}."
    echo '       Please change your shell to Zsh, and make sure SHELL is set.'
    echo '       To change the shell use e.g. with "chsh -s /bin/zsh".'
    echo '       After changing the shell to Zsh, re-run this script.'
    exit 1
  fi
}

link_files() {
  local source="${DOTFILES}/${1}"
  local dest="${2}"

  if [ -e "${dest}" ] && [ ! -h "${dest}" ]; then
    echo " WARN: symlink failed, \"${dest}\" exists and is not a symlink"
  elif [ -h "${dest}" ] && [ "$(readlink "${dest}")" != "${source}" ]; then
    echo " WARN: symlink failed, \"${dest}\" is linked to another path"
  elif [ ! -e "${dest}" ]; then
    echo "    [sync] symlink \"${source}\" to \"${dest}\""
    ln -s "${source}" "${dest}"
  fi
}

sync_dotfiles() {
  echo " INFO: syncing dotfiles"
  mkdir -p "${DOTFILES}"
  rsync \
    --archive \
    --delete \
    --exclude ".DS_Store" \
    --exclude ".git/" \
    --exclude ".github/" \
    --exclude "node_modules/" \
    --exclude "zsh/custom/" \
    --human-readable \
    --no-perms \
    --itemize-changes \
    . "${DOTFILES}" \
    | sed -u 's/^/    [sync] /'

  echo " INFO: syncing custom Zsh files (zsh/custom)"
  rsync \
    --archive \
    --exclude ".DS_Store" \
    --exclude ".gitignore" \
    --human-readable \
    --no-perms \
    --itemize-changes \
    ./zsh/custom/ "${DOTFILES}/zsh/custom/" \
    | sed -u 's/^/    [sync] /'

  link_files ".editorconfig" "${HOME}/.editorconfig"
  link_files ".gitignore" "${HOME}/.gitignore"
  link_files "git/.gitconfig" "${HOME}/.gitconfig"
  link_files "zsh/.zshrc" "${HOME}/.zshrc"

  mkdir -p "${HOME}/.config/ghostty"
  link_files "ghostty/config" "${HOME}/.config/ghostty/config"
  mkdir -p "${HOME}/.config/mise"
  link_files "mise/config.toml" "${HOME}/.config/mise/config.toml"
  link_files "zsh/starship.toml" "${HOME}/.config/starship.toml"

  if is_macos; then
    link_files "vscode/settings.json" "${HOME}/Library/Application Support/Code/User/settings.json"
    link_files "vscode/keybindings.json" "${HOME}/Library/Application Support/Code/User/keybindings.json"
  else
    mkdir -p "${HOME}/.config/Code/User"
    link_files "vscode/settings.json" "${HOME}/.config/Code/User/settings.json"
    link_files "vscode/keybindings.json" "${HOME}/.config/Code/User/keybindings.json"
  fi
}

assert_zsh_shell
sync_dotfiles
. "${DOTFILES}/homebrew/install"
. "${DOTFILES}/mise/install"

if is_macos; then
  echo " INFO: configuring macOS"
  for file in "${DOTFILES}/macos/"*; do
    . "${file}"
  done

  echo " WARN: a restart of macOS may be required to apply all changes"
fi

exit 0
